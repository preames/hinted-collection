This repository holds the code that was written as part of my (Philip Reames) hinted collection project while at University of California Berkeley.  This code based was used in support of the ISMM 2013 paper "Toward Hinted Collection" by Philip Reames and George Necula, and of my master's thesis "Hinted Collection".

Worth noting is that the released code is NOT the exact version which was used to generate the results for either paper.  You should be able to obtain similar results, but the results will not be exact matches for the published results. 

Code Overview:
- hintgc -- The actual collector itself
  - ./build/ -- the build system with release, release+asserts, and debug builds
  - ./src/ -- all the code
  - ./install -- unused really
- benchmarks -- various (likely broken) scripts to run various case studies and benchmark programs
  - ./results -- results from SPEC2006 on various machines and configurations.  Results from clang-case study on laptop machine
  - ./micro -- microbenchmarks used to test corner cases and evaluation in the papers.
     - ./results -- the results from both papers
- reporting -- this directory contains all the scripts which process the results file to create nice latex charts and tables.  The output (in ./generated) was used by all the papers.   (The version here supports the ms-thesis, but not the ISMM 2013 paper.  Most plots should still be there, but some got modified slightly.)
- boehm-gc-7.2 -- A mostly unmodified version of Boehm-Weiser collector.

Note on Terminology: Most of the code uses the terms "hint", "hinted collection", or "hintgc", but some of it still uses "pending free" or "PF" which was the original name of the project.

Note on Project Status: This is a snapshot of work that we are continuing and hope to publish further on.  If you're interested in collaborating, please email one of the authors.  There will likely be future code snapshots released.

Note on Code Quality: Be aware that this repository is a snapshot of *research project*.  Research code is not production code.  There are known (and probably unknown) bugs in this code.  This is probably more solid research code than most, but it's still research code.
